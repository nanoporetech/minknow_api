# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from minknow_api import analysis_configuration_pb2 as minknow__api_dot_analysis__configuration__pb2


class AnalysisConfigurationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_analysis_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_analysis_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetAnalysisConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.FromString,
                )
        self.set_analysis_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_analysis_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisConfigurationResponse.FromString,
                )
        self.reset_analysis_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/reset_analysis_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationResponse.FromString,
                )
        self.set_analysis_enabled_state = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_analysis_enabled_state',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateResponse.FromString,
                )
        self.get_channel_states_desc = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_channel_states_desc',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescResponse.FromString,
                )
        self.get_summary = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_summary',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetSummaryRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.GetSummaryResponse.FromString,
                )
        self.set_basecaller_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_basecaller_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.FromString,
                )
        self.preload_basecaller_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/preload_basecaller_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.FromString,
                )
        self.get_basecaller_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_basecaller_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetBasecallerConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.BasecallerConfiguration.FromString,
                )
        self.get_pore_type_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_pore_type_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetPoreTypeConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.FromString,
                )
        self.set_pore_type_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_pore_type_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetPoreTypeConfigurationResponse.FromString,
                )
        self.set_writer_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_writer_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetWriterConfigurationResponse.FromString,
                )
        self.get_writer_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_writer_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetWriterConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.FromString,
                )
        self.get_read_classifications = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_read_classifications',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsResponse.FromString,
                )
        self.get_dynamic_analysis_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_dynamic_analysis_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.GetDynamicAnalysisConfigurationRequest.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.FromString,
                )
        self.set_dynamic_analysis_configuration = channel.unary_unary(
                '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_dynamic_analysis_configuration',
                request_serializer=minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.SerializeToString,
                response_deserializer=minknow__api_dot_analysis__configuration__pb2.SetDynamicAnalysisConfigurationResponse.FromString,
                )


class AnalysisConfigurationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_analysis_configuration(self, request, context):
        """Get the analysis configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_analysis_configuration(self, request, context):
        """Sets the analysis configuration

        This sets the whole configuration as-is, so you have to specify the whole analysis configuration as any fields
        there previously will be overwritten. To preserve the current analysis configuration, use a get-modify-set
        approach. Use get_analysis_configuration to retrieve the current config and modify the fields on that copy.
        Then use this call to set the modified version.

        The AnalysisConfiguration message is converted to/from json in Minknow, but this will be removed from later
        versions of MinKNOW. The basecaller params are the first ones to move away from the jsn format. The old structure
        has been kept for backwards compatibility, but it will be removed.

        The AnalysisConfiguration message is intended to be used to convert easily from protobuf to json and back again.
        To convert from json to a protobuf message (assuming 'analysis_conf_json' holds the json data:

        >>> import minknow_api
        >>> from google.protobuf import json_format
        >>>
        >>> analysis_conf_pb = minknow_api.analysis_configuration_service.AnalysisConfiguration()
        >>> json_format.Parse(json.dumps(analysis_conf_json), analysis_conf_pb)

        To convert from a protobuf message to json:

        >>> json_data = json_format.MessageToJson(analysis_conf_resp, preserving_proto_field_name=True, including_default_value_fields=True)

        'preserving_proto_field_name' is needed because json_format will try convert keys to json-standard(?) format, like converting
        my_key to myKey, and the key names as seen in the protobuf file are important to minknow

        'including_default_value_fields' is needed because in proto3, primitive values that are default initialised (like a uint32 with value 0)
        will not be sent on the wire, so the value wouldn't appear when converting to json. In practice, most values are wrapper types and this
        field won't have an affect in wrapper types, but it does affect enum types as the default initialised value is the 0th enum.

        NOTE: if the analysis configuration was set using the new parameters (with the filename for basecalling config files), the old parameters
        from jsn will be ignored. So set_analysis_configuration must be used with either the old protobuf message for the basecaller parameters,
        or with the new one, but it cannot be used interleaved!
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset_analysis_configuration(self, request, context):
        """Reset the analysis configuration

        The configuration will be set to the initial default configuration that was set on boot

        Since 3.0
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_analysis_enabled_state(self, request, context):
        """Enable or disable analysis entirely.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_channel_states_desc(self, request, context):
        """Get a description of the possible channel states.

        This is a subset of the information included in the channel states section of the analysis
        configuration. It will change when the analysis configuration changes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_summary(self, request, context):
        """Get a brief summary of the analysis configuration.

        This is a high-level overview of what major parts of the analysis pipeline are enabled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_basecaller_configuration(self, request, context):
        """Configure the basecaller which will run during acquisition.

        This rpc will result in an error if invoked during acquisition.

        By default no basecalling is performed (enable = false).

        Since 3.0
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def preload_basecaller_configuration(self, request, context):
        """Inform MinKNOW the passed basecall configuration will be used at some point in the future, and could be loaded now
        to reduce wait time in the future.

        This rpc will result in an error if invoked during acquisition.

        The call will block until any previous call to preload configs is complete, but does not block while the config
        is loaded, no errors are reported to the caller if the config is invalid.

        Since 4.1
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_basecaller_configuration(self, request, context):
        """Find the current basecaller configuration (see #set_basecaller_configuration)

        Since 3.0
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_pore_type_configuration(self, request, context):
        """Get the pore type configuration

        Since 3.2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_pore_type_configuration(self, request, context):
        """Set the pore type configuration

        By default, the configuration for all wells is "not_set"
        (global_pore_type set to "not_set")

        This rpc will result in an error if new pore types are defined during acquisition.
        The pore type which is active on specific channel/well may be changed during acquisition.

        If an invalid PoreTypeConfiguration is supplied, an error will be returned
        Invalid PoreTypeConfiguration include those where:

        - No pore_type_config is set
        - A pore type is set to an empty string
        - A pore type is set to "invalid"

        If an error is returned, the pore type configuration is not updated.

        Since 3.2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_writer_configuration(self, request, context):
        """Set the writer configuration.

        Note: Calling this method overrides any previous settings stored for the writers.
        In order to preserve settings, you should call #get_writer_configuration, mutate
        the config, then call this method.

        Will fail with FAILED_PRECONDITION if acquisition is running.

        The default writer config is to write nothing to disk.

        Since 3.3
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_writer_configuration(self, request, context):
        """Get the currently active writer configuration.

        Since 3.3
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_read_classifications(self, request, context):
        """Get a map of read classifications mapped to id (used internally in analysis).

        This will change when the analysis configuration changes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_dynamic_analysis_configuration(self, request, context):
        """Get the dynamic analysis configuration - this configuration can be changed during acquisition periods,
        and is reset at the start of acquisition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_dynamic_analysis_configuration(self, request, context):
        """Set the dynamic analysis configuration, used during

        This can be changed during an acquisition period, and should be called as new values become appropriate.
        The new analysis parameters will be used after any data already received has been processe.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnalysisConfigurationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_analysis_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_analysis_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetAnalysisConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.SerializeToString,
            ),
            'set_analysis_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_analysis_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisConfigurationResponse.SerializeToString,
            ),
            'reset_analysis_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.reset_analysis_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationResponse.SerializeToString,
            ),
            'set_analysis_enabled_state': grpc.unary_unary_rpc_method_handler(
                    servicer.set_analysis_enabled_state,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateResponse.SerializeToString,
            ),
            'get_channel_states_desc': grpc.unary_unary_rpc_method_handler(
                    servicer.get_channel_states_desc,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescResponse.SerializeToString,
            ),
            'get_summary': grpc.unary_unary_rpc_method_handler(
                    servicer.get_summary,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetSummaryRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.GetSummaryResponse.SerializeToString,
            ),
            'set_basecaller_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_basecaller_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.SerializeToString,
            ),
            'preload_basecaller_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.preload_basecaller_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.SerializeToString,
            ),
            'get_basecaller_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_basecaller_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetBasecallerConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.BasecallerConfiguration.SerializeToString,
            ),
            'get_pore_type_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_pore_type_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetPoreTypeConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.SerializeToString,
            ),
            'set_pore_type_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_pore_type_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetPoreTypeConfigurationResponse.SerializeToString,
            ),
            'set_writer_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_writer_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetWriterConfigurationResponse.SerializeToString,
            ),
            'get_writer_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_writer_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetWriterConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.SerializeToString,
            ),
            'get_read_classifications': grpc.unary_unary_rpc_method_handler(
                    servicer.get_read_classifications,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsResponse.SerializeToString,
            ),
            'get_dynamic_analysis_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_dynamic_analysis_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.GetDynamicAnalysisConfigurationRequest.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.SerializeToString,
            ),
            'set_dynamic_analysis_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_dynamic_analysis_configuration,
                    request_deserializer=minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.FromString,
                    response_serializer=minknow__api_dot_analysis__configuration__pb2.SetDynamicAnalysisConfigurationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'minknow_api.analysis_configuration.AnalysisConfigurationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AnalysisConfigurationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_analysis_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_analysis_configuration',
            minknow__api_dot_analysis__configuration__pb2.GetAnalysisConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_analysis_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_analysis_configuration',
            minknow__api_dot_analysis__configuration__pb2.AnalysisConfiguration.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetAnalysisConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset_analysis_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/reset_analysis_configuration',
            minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.ResetAnalysisConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_analysis_enabled_state(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_analysis_enabled_state',
            minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetAnalysisEnabledStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_channel_states_desc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_channel_states_desc',
            minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.GetChannelStatesDescResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_summary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_summary',
            minknow__api_dot_analysis__configuration__pb2.GetSummaryRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.GetSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_basecaller_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_basecaller_configuration',
            minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def preload_basecaller_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/preload_basecaller_configuration',
            minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetBasecallerConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_basecaller_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_basecaller_configuration',
            minknow__api_dot_analysis__configuration__pb2.GetBasecallerConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.BasecallerConfiguration.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_pore_type_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_pore_type_configuration',
            minknow__api_dot_analysis__configuration__pb2.GetPoreTypeConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_pore_type_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_pore_type_configuration',
            minknow__api_dot_analysis__configuration__pb2.PoreTypeConfiguration.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetPoreTypeConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_writer_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_writer_configuration',
            minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetWriterConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_writer_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_writer_configuration',
            minknow__api_dot_analysis__configuration__pb2.GetWriterConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.WriterConfiguration.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_read_classifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_read_classifications',
            minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.GetReadClassificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_dynamic_analysis_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/get_dynamic_analysis_configuration',
            minknow__api_dot_analysis__configuration__pb2.GetDynamicAnalysisConfigurationRequest.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_dynamic_analysis_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.analysis_configuration.AnalysisConfigurationService/set_dynamic_analysis_configuration',
            minknow__api_dot_analysis__configuration__pb2.DynamicAnalysisConfiguration.SerializeToString,
            minknow__api_dot_analysis__configuration__pb2.SetDynamicAnalysisConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
