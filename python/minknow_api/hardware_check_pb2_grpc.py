# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from minknow_api import hardware_check_pb2 as minknow__api_dot_hardware__check__pb2


class HardwareCheckServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.start_hardware_check = channel.unary_unary(
                '/minknow_api.hardware_check.HardwareCheckService/start_hardware_check',
                request_serializer=minknow__api_dot_hardware__check__pb2.StartHardwareCheckRequest.SerializeToString,
                response_deserializer=minknow__api_dot_hardware__check__pb2.StartHardwareCheckResponse.FromString,
                )
        self.stop_hardware_check = channel.unary_unary(
                '/minknow_api.hardware_check.HardwareCheckService/stop_hardware_check',
                request_serializer=minknow__api_dot_hardware__check__pb2.StopHardwareCheckRequest.SerializeToString,
                response_deserializer=minknow__api_dot_hardware__check__pb2.StopHardwareCheckResponse.FromString,
                )
        self.update_hardware_check_results = channel.unary_unary(
                '/minknow_api.hardware_check.HardwareCheckService/update_hardware_check_results',
                request_serializer=minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsRequest.SerializeToString,
                response_deserializer=minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsResponse.FromString,
                )
        self.stream_hardware_check_results = channel.unary_stream(
                '/minknow_api.hardware_check.HardwareCheckService/stream_hardware_check_results',
                request_serializer=minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsRequest.SerializeToString,
                response_deserializer=minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsResponse.FromString,
                )
        self.generate_hardware_check_report = channel.unary_stream(
                '/minknow_api.hardware_check.HardwareCheckService/generate_hardware_check_report',
                request_serializer=minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportRequest.SerializeToString,
                response_deserializer=minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportResponse.FromString,
                )


class HardwareCheckServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def start_hardware_check(self, request, context):
        """Starts a hardware check against the device and any given positions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_hardware_check(self, request, context):
        """Stops a hardware check against the device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_hardware_check_results(self, request, context):
        """Sets the latest hardware check result within Core, with the information from the hardware check script.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stream_hardware_check_results(self, request, context):
        """Lists all hardware checks.
        Stream remains open whilst subscribed and any additionally started hardware checks are added to the list.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def generate_hardware_check_report(self, request, context):
        """Generate a hardware check result report from a given hardware check ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HardwareCheckServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'start_hardware_check': grpc.unary_unary_rpc_method_handler(
                    servicer.start_hardware_check,
                    request_deserializer=minknow__api_dot_hardware__check__pb2.StartHardwareCheckRequest.FromString,
                    response_serializer=minknow__api_dot_hardware__check__pb2.StartHardwareCheckResponse.SerializeToString,
            ),
            'stop_hardware_check': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_hardware_check,
                    request_deserializer=minknow__api_dot_hardware__check__pb2.StopHardwareCheckRequest.FromString,
                    response_serializer=minknow__api_dot_hardware__check__pb2.StopHardwareCheckResponse.SerializeToString,
            ),
            'update_hardware_check_results': grpc.unary_unary_rpc_method_handler(
                    servicer.update_hardware_check_results,
                    request_deserializer=minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsRequest.FromString,
                    response_serializer=minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsResponse.SerializeToString,
            ),
            'stream_hardware_check_results': grpc.unary_stream_rpc_method_handler(
                    servicer.stream_hardware_check_results,
                    request_deserializer=minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsRequest.FromString,
                    response_serializer=minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsResponse.SerializeToString,
            ),
            'generate_hardware_check_report': grpc.unary_stream_rpc_method_handler(
                    servicer.generate_hardware_check_report,
                    request_deserializer=minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportRequest.FromString,
                    response_serializer=minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'minknow_api.hardware_check.HardwareCheckService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HardwareCheckService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def start_hardware_check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.hardware_check.HardwareCheckService/start_hardware_check',
            minknow__api_dot_hardware__check__pb2.StartHardwareCheckRequest.SerializeToString,
            minknow__api_dot_hardware__check__pb2.StartHardwareCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stop_hardware_check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.hardware_check.HardwareCheckService/stop_hardware_check',
            minknow__api_dot_hardware__check__pb2.StopHardwareCheckRequest.SerializeToString,
            minknow__api_dot_hardware__check__pb2.StopHardwareCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_hardware_check_results(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minknow_api.hardware_check.HardwareCheckService/update_hardware_check_results',
            minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsRequest.SerializeToString,
            minknow__api_dot_hardware__check__pb2.UpdateHardwareCheckResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stream_hardware_check_results(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/minknow_api.hardware_check.HardwareCheckService/stream_hardware_check_results',
            minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsRequest.SerializeToString,
            minknow__api_dot_hardware__check__pb2.StreamHardwareCheckResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def generate_hardware_check_report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/minknow_api.hardware_check.HardwareCheckService/generate_hardware_check_report',
            minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportRequest.SerializeToString,
            minknow__api_dot_hardware__check__pb2.GenerateHardwareCheckReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
