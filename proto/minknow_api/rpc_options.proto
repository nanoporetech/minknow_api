syntax="proto3";

package minknow_api;

option java_package = "com.nanoporetech.minknow_api";
option objc_class_prefix = "MKAPI";

import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
    // Marks a field as required.
    //
    // This is only used at the service layer, to error out before attempting
    // the RPC if the value is not provided. It does not affect the wire format.
    bool rpc_required = 50001;

    // Unwrap a message field.
    //
    // If you have the following:
    //
    // message A {
    //   bool  field1 = 1;
    //   float field2 = 2;
    // }
    // message B {
    //   A submessage = 1 [(rpc_unwrap) = true];
    // }
    //
    // and message B is used as the arguments message for an RPC call, then the
    // fields of message A will be accepted directly as parameters in the rpc
    // call wrapper.
    //
    // Note that you must take care to avoid name clashes - if A and B both had
    // a field with the same name, this would result in an error.
    bool rpc_unwrap = 50002;
}

extend google.protobuf.MethodOptions {
    // Marks a field as required.
    //
    // This is only used at the service layer, to warn when called.
    bool experimental = 50003;
}
